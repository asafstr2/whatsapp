{"ast":null,"code":"var _jsxFileName = \"C:\\\\web-dev\\\\whatsAppClone\\\\whatsappMern\\\\front\\\\src\\\\Chat.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport { useParams } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nconst useStyles = makeStyles(theme => ({\n  chat: {\n    flex: \"0.65\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  chatHeader: {\n    padding: \"20px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid lightgray\"\n  },\n  chatHeaderInfo: {\n    flex: \"1\"\n  },\n  chatHeaderRight: {\n    marginLeft: \"auto\"\n  },\n  chatBody: {\n    flex: \"1\",\n    backgroundImage: \"url('https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png')\",\n    backgroundRepeat: \"repeat\",\n    backgroundPosition: \"center\",\n    padding: \"30px\",\n    overflow: \"auto\"\n  },\n  chatMessage: {\n    position: \"relative\",\n    fontSize: \"16px\",\n    padding: \"10px\",\n    borderRadius: \"10px\",\n    width: \"fit-content\",\n    display: \"flex\",\n    backgroundColor: \"#ffffff\",\n    marginBottom: \"4%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginBottom: \"8%\"\n    }\n  },\n  reciver: {\n    marginLeft: \"auto\",\n    backgroundColor: \"#dcf8c6\"\n  },\n  chatName: {\n    position: \"absolute\",\n    top: \"-15px\",\n    fontSize: \"10px\"\n  },\n  chatTimeStamp: {\n    fontSize: \"xx-small\",\n    marginLeft: \"6px\",\n    alignSelf: \"flex-end\"\n  },\n  chatFooter: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"62px\",\n    borderTop: \"1px solid lightgray\"\n  },\n  chatFooterForm: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flex: \"1\"\n  },\n  chatFooterFormInput: {\n    flex: \"1\",\n    minHeight: \"40px\",\n    borderRadius: \"20px\",\n    border: \"none\",\n    outline: \"none\",\n    paddingLeft: \"2%\",\n    fontSize: \"18px\"\n  }\n}));\n\nfunction Chat({\n  messagesProps\n}) {\n  const currentUserId = \"asaf\";\n  const classes = useStyles(currentUserId === \"asaf\");\n  const [seed, setSeed] = useState(0);\n  const [input, setInput] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState(messagesProps);\n  const {\n    roomId\n  } = useParams(); // useEffect(() => {\n  //   setSeed(Math.floor(Math.random() * 5000));\n  //   let roomNameCleanup = \"\";\n  //   let messagesCleanup = \"\";\n  //   if (roomId) {\n  //     roomNameCleanup = db\n  //       .collection(\"rooms\")\n  //       .doc(roomId)\n  //       .onSnapshot((snapshoot) => setRoomName(snapshoot.data().name));\n  //     messagesCleanup = db\n  //       .collection(\"rooms\")\n  //       .doc(roomId)\n  //       .collection(\"messages\")\n  //       .orderBy(\"timestamp\", \"asc\")\n  //       .onSnapshot((snapshoot) =>\n  //         setMessages(snapshoot.docs.map((doc) => doc.data()))\n  //       );\n  //   }\n  //   return () => {\n  //     roomNameCleanup();\n  //     messagesCleanup();\n  //   };\n  // }, [roomId]);\n\n  let hundleSubmit = e => {\n    e.preventDefault();\n    console.log(input);\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\n      message: input,\n      name: currentUserId,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: `https://avatars.dicebear.com/api/human/${seed}.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatHeaderInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, roomName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, messages === null || messages === void 0 ? void 0 : messages.timestamp)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatHeaderRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AttachFile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, messages === null || messages === void 0 ? void 0 : messages.map((message, i) => /*#__PURE__*/React.createElement(\"p\", {\n    key: i,\n    className: `${classes.chatMessage} ${message.name === currentUserId && classes.reciver}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${classes.chatName}  `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \" \", message.name), message.message, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.chatTimeStamp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, message === null || message === void 0 ? void 0 : message.timestamp)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InsertEmoticonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: hundleSubmit,\n    className: classes.chatFooterForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: classes.chatFooterFormInput,\n    placeholder: \"Type a message\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MicIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Chat;","map":{"version":3,"sources":["C:/web-dev/whatsAppClone/whatsappMern/front/src/Chat.js"],"names":["React","useEffect","useState","makeStyles","Avatar","IconButton","MoreVertIcon","SearchOutlined","AttachFile","InsertEmoticonIcon","SendIcon","MicIcon","useParams","db","firebase","useStyles","theme","chat","flex","display","flexDirection","chatHeader","padding","alignItems","borderBottom","chatHeaderInfo","chatHeaderRight","marginLeft","chatBody","backgroundImage","backgroundRepeat","backgroundPosition","overflow","chatMessage","position","fontSize","borderRadius","width","backgroundColor","marginBottom","breakpoints","down","reciver","chatName","top","chatTimeStamp","alignSelf","chatFooter","height","borderTop","chatFooterForm","chatFooterFormInput","minHeight","border","outline","paddingLeft","Chat","messagesProps","currentUserId","classes","seed","setSeed","input","setInput","roomName","setRoomName","messages","setMessages","roomId","hundleSubmit","e","preventDefault","console","log","collection","doc","add","message","name","timestamp","firestore","FieldValue","serverTimestamp","map","i","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,MAAMC,SAAS,GAAGZ,UAAU,CAAEa,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,MADF;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,aAAa,EAAE;AAHX,GADiC;AAMvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,OAAO,EAAE,MADC;AAEVH,IAAAA,OAAO,EAAE,MAFC;AAGVI,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,YAAY,EAAE;AAJJ,GAN2B;AAYvCC,EAAAA,cAAc,EAAE;AACdP,IAAAA,IAAI,EAAE;AADQ,GAZuB;AAevCQ,EAAAA,eAAe,EAAE;AACfC,IAAAA,UAAU,EAAE;AADG,GAfsB;AAkBvCC,EAAAA,QAAQ,EAAE;AACRV,IAAAA,IAAI,EAAE,GADE;AAERW,IAAAA,eAAe,EACb,6GAHM;AAIRC,IAAAA,gBAAgB,EAAE,QAJV;AAKRC,IAAAA,kBAAkB,EAAE,QALZ;AAMRT,IAAAA,OAAO,EAAE,MAND;AAORU,IAAAA,QAAQ,EAAE;AAPF,GAlB6B;AA2BvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,UADC;AAEXC,IAAAA,QAAQ,EAAE,MAFC;AAGXb,IAAAA,OAAO,EAAE,MAHE;AAIXc,IAAAA,YAAY,EAAE,MAJH;AAKXC,IAAAA,KAAK,EAAE,aALI;AAMXlB,IAAAA,OAAO,EAAE,MANE;AAOXmB,IAAAA,eAAe,EAAE,SAPN;AAQXC,IAAAA,YAAY,EAAE,IARH;AASX,KAACvB,KAAK,CAACwB,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BF,MAAAA,YAAY,EAAE;AADgB;AATrB,GA3B0B;AAwCvCG,EAAAA,OAAO,EAAE;AACPf,IAAAA,UAAU,EAAE,MADL;AAEPW,IAAAA,eAAe,EAAE;AAFV,GAxC8B;AA6CvCK,EAAAA,QAAQ,EAAE;AACRT,IAAAA,QAAQ,EAAE,UADF;AAERU,IAAAA,GAAG,EAAE,OAFG;AAGRT,IAAAA,QAAQ,EAAE;AAHF,GA7C6B;AAkDvCU,EAAAA,aAAa,EAAE;AACbV,IAAAA,QAAQ,EAAE,UADG;AAEbR,IAAAA,UAAU,EAAE,KAFC;AAGbmB,IAAAA,SAAS,EAAE;AAHE,GAlDwB;AAwDvCC,EAAAA,UAAU,EAAE;AACV5B,IAAAA,OAAO,EAAE,MADC;AAEVI,IAAAA,UAAU,EAAE,QAFF;AAGVyB,IAAAA,MAAM,EAAE,MAHE;AAIVC,IAAAA,SAAS,EAAE;AAJD,GAxD2B;AA8DvCC,EAAAA,cAAc,EAAE;AACd/B,IAAAA,OAAO,EAAE,MADK;AAEdI,IAAAA,UAAU,EAAE,QAFE;AAGdL,IAAAA,IAAI,EAAE;AAHQ,GA9DuB;AAmEvCiC,EAAAA,mBAAmB,EAAE;AACnBjC,IAAAA,IAAI,EAAE,GADa;AAEnBkC,IAAAA,SAAS,EAAE,MAFQ;AAGnBhB,IAAAA,YAAY,EAAE,MAHK;AAInBiB,IAAAA,MAAM,EAAE,MAJW;AAKnBC,IAAAA,OAAO,EAAE,MALU;AAMnBC,IAAAA,WAAW,EAAE,IANM;AAOnBpB,IAAAA,QAAQ,EAAE;AAPS;AAnEkB,CAAZ,CAAD,CAA5B;;AA6EA,SAASqB,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAiC;AAC/B,QAAMC,aAAa,GAAG,MAAtB;AACA,QAAMC,OAAO,GAAG5C,SAAS,CAAC2C,aAAa,KAAK,MAAnB,CAAzB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkB3D,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAAC4D,KAAD,EAAQC,QAAR,IAAoB7D,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC8D,QAAD,EAAWC,WAAX,IAA0B/D,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgE,QAAD,EAAWC,WAAX,IAA0BjE,QAAQ,CAACuD,aAAD,CAAxC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAaxD,SAAS,EAA5B,CAP+B,CAQ/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAIyD,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACAjD,IAAAA,EAAE,CAAC6D,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BP,MAA3B,EAAmCM,UAAnC,CAA8C,UAA9C,EAA0DE,GAA1D,CAA8D;AAC5DC,MAAAA,OAAO,EAAEf,KADmD;AAE5DgB,MAAAA,IAAI,EAAEpB,aAFsD;AAG5DqB,MAAAA,SAAS,EAAEjE,QAAQ,CAACkE,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;AAHiD,KAA9D;AAKAnB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GATD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAAC1C,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE0C,OAAO,CAACtC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAG,0CAAyCuC,IAAK,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAED,OAAO,CAAClC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKuC,QAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEa,SAAd,CAFF,CAFF,eAME;AAAK,IAAA,SAAS,EAAEpB,OAAO,CAACjC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAOE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CANF,CADF,eAmBE;AAAK,IAAA,SAAS,EAAEiC,OAAO,CAAC/B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGsC,QADH,aACGA,QADH,uBACGA,QAAQ,CAAEiB,GAAV,CAAc,CAACN,OAAD,EAAUO,CAAV,kBACb;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,SAAS,EAAG,GAAEzB,OAAO,CAAC1B,WAAY,IAChC4C,OAAO,CAACC,IAAR,KAAiBpB,aAAjB,IAAkCC,OAAO,CAACjB,OAC3C,EAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAM,IAAA,SAAS,EAAG,GAAEiB,OAAO,CAAChB,QAAS,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA4CkC,OAAO,CAACC,IAApD,CANF,EAOGD,OAAO,CAACA,OAPX,eAQE;AAAM,IAAA,SAAS,EAAElB,OAAO,CAACd,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgC,OADH,aACGA,OADH,uBACGA,OAAO,CAAEE,SADZ,CARF,CADD,CADH,CAnBF,eAoCE;AAAK,IAAA,SAAS,EAAEpB,OAAO,CAACZ,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE;AAAM,IAAA,QAAQ,EAAEsB,YAAhB;AAA8B,IAAA,SAAS,EAAEV,OAAO,CAACT,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAES,OAAO,CAACR,mBAFrB;AAGE,IAAA,WAAW,EAAC,gBAHd;AAIE,IAAA,KAAK,EAAEW,KAJT;AAKE,IAAA,QAAQ,EAAGQ,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACe,MAAF,CAASC,KAAV,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,eAWE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CALF,CApCF,CADF;AA4DD;;AAED,eAAe9B,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  chat: {\r\n    flex: \"0.65\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  chatHeader: {\r\n    padding: \"20px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    borderBottom: \"1px solid lightgray\",\r\n  },\r\n  chatHeaderInfo: {\r\n    flex: \"1\",\r\n  },\r\n  chatHeaderRight: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  chatBody: {\r\n    flex: \"1\",\r\n    backgroundImage:\r\n      \"url('https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png')\",\r\n    backgroundRepeat: \"repeat\",\r\n    backgroundPosition: \"center\",\r\n    padding: \"30px\",\r\n    overflow: \"auto\",\r\n  },\r\n  chatMessage: {\r\n    position: \"relative\",\r\n    fontSize: \"16px\",\r\n    padding: \"10px\",\r\n    borderRadius: \"10px\",\r\n    width: \"fit-content\",\r\n    display: \"flex\",\r\n    backgroundColor: \"#ffffff\",\r\n    marginBottom: \"4%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginBottom: \"8%\",\r\n    },\r\n  },\r\n  reciver: {\r\n    marginLeft: \"auto\",\r\n    backgroundColor: \"#dcf8c6\",\r\n  },\r\n\r\n  chatName: {\r\n    position: \"absolute\",\r\n    top: \"-15px\",\r\n    fontSize: \"10px\",\r\n  },\r\n  chatTimeStamp: {\r\n    fontSize: \"xx-small\",\r\n    marginLeft: \"6px\",\r\n    alignSelf: \"flex-end\",\r\n  },\r\n\r\n  chatFooter: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"62px\",\r\n    borderTop: \"1px solid lightgray\",\r\n  },\r\n  chatFooterForm: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flex: \"1\",\r\n  },\r\n  chatFooterFormInput: {\r\n    flex: \"1\",\r\n    minHeight: \"40px\",\r\n    borderRadius: \"20px\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    paddingLeft: \"2%\",\r\n    fontSize: \"18px\",\r\n  },\r\n}));\r\nfunction Chat({ messagesProps }) {\r\n  const currentUserId = \"asaf\";\r\n  const classes = useStyles(currentUserId === \"asaf\");\r\n  const [seed, setSeed] = useState(0);\r\n  const [input, setInput] = useState(\"\");\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState(messagesProps);\r\n  const { roomId } = useParams();\r\n  // useEffect(() => {\r\n  //   setSeed(Math.floor(Math.random() * 5000));\r\n  //   let roomNameCleanup = \"\";\r\n  //   let messagesCleanup = \"\";\r\n  //   if (roomId) {\r\n  //     roomNameCleanup = db\r\n  //       .collection(\"rooms\")\r\n  //       .doc(roomId)\r\n  //       .onSnapshot((snapshoot) => setRoomName(snapshoot.data().name));\r\n  //     messagesCleanup = db\r\n  //       .collection(\"rooms\")\r\n  //       .doc(roomId)\r\n  //       .collection(\"messages\")\r\n  //       .orderBy(\"timestamp\", \"asc\")\r\n  //       .onSnapshot((snapshoot) =>\r\n  //         setMessages(snapshoot.docs.map((doc) => doc.data()))\r\n  //       );\r\n  //   }\r\n\r\n  //   return () => {\r\n  //     roomNameCleanup();\r\n  //     messagesCleanup();\r\n  //   };\r\n  // }, [roomId]);\r\n\r\n  let hundleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(input);\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n      message: input,\r\n      name: currentUserId,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <div className={classes.chat}>\r\n      <div className={classes.chatHeader}>\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className={classes.chatHeaderInfo}>\r\n          <h3>{roomName}</h3>\r\n          <p>{messages?.timestamp}</p>\r\n        </div>\r\n        <div className={classes.chatHeaderRight}>\r\n          <IconButton size=\"small\">\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n          <IconButton size=\"small\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className={classes.chatBody}>\r\n        {messages?.map((message, i) => (\r\n          <p\r\n            key={i}\r\n            className={`${classes.chatMessage} ${\r\n              message.name === currentUserId && classes.reciver\r\n            }`}\r\n          >\r\n            <span className={`${classes.chatName}  `}> {message.name}</span>\r\n            {message.message}\r\n            <span className={classes.chatTimeStamp}>\r\n              {message?.timestamp}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n\r\n      <div className={classes.chatFooter}>\r\n        <IconButton>\r\n          <InsertEmoticonIcon />\r\n        </IconButton>\r\n\r\n        <form onSubmit={hundleSubmit} className={classes.chatFooterForm}>\r\n          <input\r\n            type=\"text\"\r\n            className={classes.chatFooterFormInput}\r\n            placeholder=\"Type a message\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n          <IconButton type=\"submit\">\r\n            <SendIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MicIcon />\r\n          </IconButton>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}