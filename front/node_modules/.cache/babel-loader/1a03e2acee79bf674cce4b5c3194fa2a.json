{"ast":null,"code":"var _jsxFileName = \"C:\\\\web-dev\\\\whatsAppClone\\\\whatsapp\\\\src\\\\SideBarChat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar } from \"@material-ui/core\";\nimport db from \"./firebase\";\nimport { Link } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  SideBarChat: {\n    display: \"flex\",\n    padding: \"20px\",\n    cursor: \"pointer\",\n    borderBottom: \"1px solid #f6f6f6\"\n  }\n}));\n\nfunction SideBarChat({\n  addNewChat,\n  name,\n  id\n}) {\n  var _messages$;\n\n  const [seed, setSeed] = useState(0);\n  const [messages, setMessages] = useState(0);\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n  useEffect(() => {\n    let messagesCleanup = \"\";\n\n    if (id) {\n      messagesCleanup = db.collection(\"rooms\").doc(id).collection(\"messages\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshoot => setMessages(snapshoot.docs.map(doc => doc.data())));\n    }\n\n    return () => {\n      messagesCleanup();\n    };\n  }, [id]);\n  const classes = useStyles();\n\n  let createNewChat = () => {\n    const roomName = prompt(\"pleae enter chat room\");\n\n    if (roomName) {\n      //DB goes here\n      db.collection(\"rooms\").add({\n        name: roomName\n      });\n      console.log(roomName);\n    }\n  };\n\n  return !addNewChat ? /*#__PURE__*/React.createElement(Link, {\n    to: `/rooms/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.SideBarChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: `https://avatars.dicebear.com/api/human/${seed}.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.SideBarChatInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, (_messages$ = messages[0]) === null || _messages$ === void 0 ? void 0 : _messages$.message)))) : /*#__PURE__*/React.createElement(\"div\", {\n    onClick: createNewChat,\n    className: classes.SideBarChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Add new chat\"));\n}\n\nexport default SideBarChat;","map":{"version":3,"sources":["C:/web-dev/whatsAppClone/whatsapp/src/SideBarChat.js"],"names":["React","useState","useEffect","makeStyles","Avatar","db","Link","useStyles","theme","SideBarChat","display","padding","cursor","borderBottom","addNewChat","name","id","seed","setSeed","messages","setMessages","Math","floor","random","messagesCleanup","collection","doc","orderBy","onSnapshot","snapshoot","docs","map","data","classes","createNewChat","roomName","prompt","add","console","log","SideBarChatInfo","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport db from \"./firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  SideBarChat: {\r\n    display: \"flex\",\r\n    padding: \"20px\",\r\n    cursor: \"pointer\",\r\n    borderBottom: \"1px solid #f6f6f6\",\r\n  },\r\n}));\r\n\r\nfunction SideBarChat({ addNewChat, name, id }) {\r\n  const [seed, setSeed] = useState(0);\r\n  const [messages, setMessages] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n  useEffect(() => {\r\n    let messagesCleanup = \"\";\r\n    if (id) {\r\n      messagesCleanup = db\r\n        .collection(\"rooms\")\r\n        .doc(id)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshoot) =>\r\n          setMessages(snapshoot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n\r\n    return () => {\r\n      messagesCleanup();\r\n    };\r\n  }, [id]);\r\n\r\n  const classes = useStyles();\r\n  let createNewChat = () => {\r\n    const roomName = prompt(\"pleae enter chat room\");\r\n    if (roomName) {\r\n      //DB goes here\r\n      db.collection(\"rooms\").add({ name: roomName });\r\n      console.log(roomName);\r\n    }\r\n  };\r\n  return !addNewChat ? (\r\n    <Link to={`/rooms/${id}`}>\r\n      <div className={classes.SideBarChat}>\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className={classes.SideBarChatInfo}>\r\n          <h2>{name}</h2>\r\n          <p>{messages[0]?.message}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  ) : (\r\n    <div onClick={createNewChat} className={classes.SideBarChat}>\r\n      <h2>Add new chat</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBarChat;\r\n"]},"metadata":{},"sourceType":"module"}